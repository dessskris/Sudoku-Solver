By inputting the mystery puzzle boards 'mystery1', 'mystery2', and
'mystery3' in the function solve_board, the following results may be
concluded:

- The board 'mystery1' has a solution. A copy of the solution may be
  found in 'mystery1-solution.dat'.

- The board 'mystery2' has no solution. This is the board that's
  impossible to solve.

- The board 'mystery3' has a solution. A copy of the solution may be
  found in 'mystery3-solution.dat'.

I am now left to identify which board is of "hard" difficulty and
which board is of "extremely hard" difficulty.

--------------------------------------------------------------------

The difficulty level of a Sudoku board is a subjective manner. As to
 eliminate ambiguity, I would like to define several ways to distinguish
 the difficulty levels.

--------------------------------------------------------------------

METHOD 1: The number of iterations that the program took to solve the
Sudoku board

By adding a polymorphic function to count the number of times the
function is recursed, the following results are found:

+----------+-------------------+
| Board    | No. of Iterations |
+----------+-------------------+
| easy     |             2,172 |
| medium   |            15,662 |
| mystery1 |           421,547 |
| mystery3 |            14,134 |
+----------+-------------------+

Since 'mystery1' takes significantly more iterations to be solved than
'mystery3', it may be deduced that 'mystery1' is of " extremely hard"
difficulty and 'mystery3' is of "hard" difficulty.

However, it is worth noting that 'medium' takes more iterations than
'mystery3' to solve. This is a limitation of this method as the number
of iteration depends on the starting digits and its distribution.

If we guessed from '9' to '1' or randomly, the number of iterations
will differ and thus we may arrive in other conclusions.

--------------------------------------------------------------------

METHOD 2: The number of starting digits in the initial Sudoku board

+----------+------------------------+
| Board    | No. of Starting Digits |
+----------+------------------------+
| easy     |                     26 |
| medium   |                     25 |
| mystery1 |                     23 |
| mystery3 |                     24 |
+----------+------------------------+

Since 'mystery3' has one more starting digit than 'mystery1', it may be
deduced that 'mystery3' is of "hard" difficulty and 'mystery1' is of
"extremely hard" difficulty.

--------------------------------------------------------------------

METHOD 3: The number of starting digits in each subgrid

+----------+---------------------------+----------------------+
| Board    | No. of Starting Digits in | No. of Subgrids with |
|          | each Subgrid              | 2 Starting Digits    |
+----------+---------------------------+----------------------+
| easy     | 3, 3, 3, 3, 2, 3, 3, 3, 3 |                    1 |
| medium   | 4, 2, 3, 2, 3, 2, 3, 2, 4 |                    4 |
| mystery1 | 3, 3, 3, 2, 2, 2, 2, 2, 3 |                    5 |
| mystery3 | 3, 2, 3, 2, 4, 2, 3, 2, 3 |                    4 |
+----------+---------------------------+----------------------+

Notice 'mystery1' has more subgrids with 2 starting digits than
'mystery3'; and 'mystery3' has 1 subgrid with 4 starting digits whereas
'mystery1' does not.
Therefore it may be deduced that 'mystery3' is of "hard" difficulty
and 'mystery1' is of "extremely hard" difficulty.

--------------------------------------------------------------------

FINAL CONCLUSION:

After considering three different ways of deducing which one of
'mystery1' and 'mystery3' is of "hard" or "extremely hard" difficulty,
all three measures result in the same conclusion as follows:

- 'mystery1': "extremely hard"
- 'mystery3': "hard"

We have also seen that the program was unable to solve 'mystery2',
which suggests that:
- 'mystery2': "impossible to solve"
